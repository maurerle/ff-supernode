# Configure logging
log syslog { remote, warning, error, auth, fatal, bug };
log "/var/log/bird/bird.log" { info, remote, warning, error, auth, fatal, bug };
router id {{ bird.router_id }};
debug protocols all;

protocol device {
    scan time 8;
}

protocol direct {
    interface "*";
    #disabled;      # Disable by default
    ipv4;           # Connect to default IPv4 table
    ipv6;           # ... and to default IPv6 table
}

{% for filter in bird.filter | default([]) %}
filter {{ filter.name }} {
{% for rule in filter.rules %}
    {{ rule }}
{% endfor%}
{% if filter.default_accept is defined and filter.default_accept %}
    accept;
{% else %}
    reject;
{% endif %}
};
{% endfor %}

{% for kernel in bird.kernel | default([]) %}
protocol kernel {
    {% if not kernel.is_ipv6 is defined or kernel.is_ipv6 %}ipv6 {% else %}ipv4 {% endif %}{          # Connect protocol table by channel
{% for rule in kernel.imports | default([]) %}
        import {{ rule }};
{% endfor %}
{% for rule in kernel.exports | default([]) %}
        export {{ rule }};
{% endfor %}
    };
{% if kernel.ip_table is defined %}
    kernel table {{ kernel.ip_table }};
{%endif %}
{% if kernel.bird_table is defined %}
    table {{ kernel.bird_table }};
{%endif %}
}
{% endfor %}

{% for route in bird.staticroutes | default([]) %}
protocol static {{ route.name }} {
    import all;
    {% for rule in route.rules %}
    {{ rule }};
    {% endfor %}
};
{% endfor %}

{% for ospf in bird.ospf | default([]) %}

protocol ospf {{ ospf.version }} {% if ospf.name is defined %}{{ ospf.name }}{% endif %} {
    {% if not ospf.is_ipv6 is defined or ospf.is_ipv6 %}ipv6{% else %}ipv4{% endif %} {
{% for rule in ospf.imports | default([]) %}
        import {{ rule }};
{% endfor %}
{% for rule in ospf.exports | default([]) %}
        export {{ rule }};
{% endfor %}
    };
{% for area in ospf.area %}
    area {{ area.id }} {
{% for interface in area.interfaces %}
        interface "{{ interface.name }}" {
{% if interface.cost is defined %}
            cost {{ interface.cost }};
{% endif %}
{% if interface.stub is defined and interface.stub %}
            stub yes;
{% endif %}
{% if interface.type is defined %}
            type {{ interface.type }};
{% endif %}
{% if interface.hello is defined %}
            hello {{ interface.hello }};
{% endif %}
{% if interface.retransmit is defined %}
            retransmit {{ interface.retransmit }};
{% endif %}
{% if interface.wait is defined %}
            wait {{ interface.wait }};
{% endif %}
{% if interface.dead is defined %}
            dead {{ interface.dead }};
{% endif %}
{% if interface.check is defined %}
            check {{ interface.check }};
{% endif %}
{% if interface.authentication is defined %}
            authentication {{ interface.authentication }};
{% endif %}
        };
{% endfor %}
    };
{% endfor %}
}
{% endfor %}

{% for template in bird.templates | default([]) %}
template {{ template.protocol }} {% if template.name is defined %}{{ template.name }}{% endif %} {
    local as {{ template.as }};
{% for rule in template.imports | default([]) %}
    import {{ rule }};
{% endfor %}
{% for rule in template.exports | default([]) %}
    export {{ rule }};
{% endfor %}
{% if template.next_hop is defined and template.next_hop %}
    next hop self;
{% endif %}
{% if template.multihop is defined %}
    multihop {{ template.multihop }};
{% endif %}
};
{% endfor %}

{% if bird.peerings is defined %}
include "/etc/bird/ebgp.conf";
{% endif %}
